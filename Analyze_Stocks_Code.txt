Sub ProcessData_Click()
'Declaration
Dim ws As Worksheet

'Loop through all sheets in the workbook
For Each ws In Worksheets

    'Process stock data
    AnalyzeStocks ws
Next

End Sub

' Code to analyse and process the stocks

Sub AnalyzeStocks(ws)
On Error GoTo errhandler

'Declare variables
Dim ticker As String
Dim outputindex As Integer
Dim opening_price As Double
Dim closing_price As Double
Dim percent_change As Double
Dim total_volume As Double
Dim calcdata_lastrow As Integer


' Write new column headers
ws.Cells(1, 9).Value = "Ticker"
ws.Cells(1, 10).Value = "Yearly Change"
ws.Cells(1, 11).Value = "Percent Change"
ws.Cells(1, 12).Value = "Total Stock Volume"


' Get the last row
lastrow = ws.Cells(Rows.Count, "A").End(xlUp).Row


'Initialize variables
outputindex = 2
total_volume = 0


For i = 2 To lastrow
    
    ' Calculating Total sales volume
    total_volume = total_volume + ws.Cells(i, 7).Value
        
    
    'Write unique Ticker values and Opening price
    If ticker <> ws.Cells(i, 1).Value Then
    
        ticker = ws.Cells(i, 1).Value
        opening_price = ws.Cells(i, 3).Value
        
        ws.Cells(outputindex, 9).Value = ticker

        
    End If
        
        ' Write closing price, Yearly change, Percent Change, Total sales volume
        
        ' Set the last date of the year
        Dim lastdate As String
        lastdate = ws.Name + "1231"
        
        If ws.Cells(i, 2).Value = lastdate Then
            closing_price = ws.Cells(i, 6).Value
            ws.Cells(outputindex, 10).Value = closing_price - opening_price
            
            percent_change = (closing_price - opening_price) / opening_price
            ws.Cells(outputindex, 11).Value = percent_change
            
            ws.Cells(outputindex, 12).Value = total_volume
            
            'Reset total_volume
            total_volume = 0
            
            'Increment the output index
            outputindex = outputindex + 1
    End If

Next i

'Get the last row
calcdata_lastrow = ws.Cells(Rows.Count, "L").End(xlUp).Row


'Write Summary
Summary ws, calcdata_lastrow

'Color formatting
ConditionalFormattingColor ws, calcdata_lastrow


errhandler:
    Debug.Print Err.Description
        
End Sub


Sub Summary(ws, calcdata_lastrow)

'Declare variables

Dim rng As Range
Dim max_value As Double
Dim max_increase As Double
Dim max_decrease As Double
Dim tickercolumnindex As Integer

' Write headers
ws.Cells(1, 16).Value = "Ticker"
ws.Cells(1, 17).Value = "Value"

ws.Cells(2, 15).Value = "Greatest % increase"
ws.Cells(3, 15).Value = "Greatest % decrease"
ws.Cells(4, 15).Value = "Greatest Total volume"

'Get Greatest Total volume
Set rng = ws.Cells.Range("L2:L" & calcdata_lastrow)
max_value = WorksheetFunction.Max(rng)
ws.Cells(4, 17).Value = max_value

'Get the Greatest % increase
Set rng = ws.Cells.Range("K2:K" & calcdata_lastrow)

'Set number format for Percent Change column
rng.NumberFormat = "0.00%"

max_increase = WorksheetFunction.Max(rng)
ws.Cells(2, 17).Value = max_increase
ws.Cells(2, 17).NumberFormat = "0.00%"


'Get the Greatest % decrease
max_decrease = WorksheetFunction.Min(rng)
ws.Cells(3, 17).Value = max_decrease
ws.Cells(3, 17).NumberFormat = "0.00%"


'Get the corresponding ticker from unique tickerlist
tickercolumnindex = 9

For i = 2 To calcdata_lastrow
    
    If ws.Cells(i, 11).Value = max_increase Then
        ws.Cells(2, 16).Value = ws.Cells(i, tickercolumnindex)
        
    End If
    
    If ws.Cells(i, 11).Value = max_decrease Then
        ws.Cells(3, 16).Value = ws.Cells(i, tickercolumnindex)
        
    End If
    
    If ws.Cells(i, 12).Value = max_value Then
        ws.Cells(4, 16).Value = ws.Cells(i, tickercolumnindex)
        
    End If

Next i

End Sub

Sub ConditionalFormattingColor(ws, calcdata_lastrow)

Dim rng As Range
'Create range object
Set rng = ws.Cells.Range("J2:K" & calcdata_lastrow)

'Delete previous conditional formats
rng.FormatConditions.Delete

'Add first rule - Color Red for negative values
rng.FormatConditions.Add Type:=xlCellValue, Operator:=xlLess, Formula1:="=0"
rng.FormatConditions(1).Interior.Color = vbRed

'Add second rule - Color Green for positive values
rng.FormatConditions.Add Type:=xlCellValue, Operator:=xlGreaterEqual, Formula1:="=0"
rng.FormatConditions(2).Interior.Color = vbGreen

End Sub


